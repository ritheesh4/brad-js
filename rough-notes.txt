- Using ! and tab, simple html template can be implemented.
- The javascript code can be linked to the html file like css files.
- Inside of the <script src ="app.js"><script/>, the location of the script can be mentioned.
- In the browser console, type document and you will get the html file or document of that page.
- document.querySelector('h1').style.color="red". Using this document.querySelector I can       
  change the properties
  of that particular class directly from the console of the browser.
- In the chrome browser, numbers are blue 
  and strings are black.
- The web console can be used for easy fixing and easy  handling of situations


- firstName //Camel case -recommended
  first_name // UnderScore
  FirstName //Pascal case -recommded for ES6 class

- Primitive Data Types:
  Stored directly in the location thd variable accesses Stored on the stack
- Reference Data Types:
  Accessed by Reference
  objets that are stored on the heap
  A pointer to a location in memory
- In js there are 6 primitive data Types
  1. String 
  2. Number 
  3. Boolean
  4. Null
  5. Undefined
  6. Symbols (ES6)

- Reference Data Types/ Objects 
  1. Arrays 
  2. Object Literals
  3. Functions
  4. Dates
  5. Anything Else..

#Video8
- javscript is a dynamic type language
  - Types are associated with values not variables.
  - The same variable can hold multiple types.
  - We do not need to specify types.
  - Most other languages are statically types (JAVA, C# C++).
  - There are supersets of JS and addons to allow static typing(TypeScript, Flow)

#Video9
- val = 5;
-console.log(val.toFixed(2));
 - Here toFixed gives the two decimal point values of the number
   
#Video10

- Math Functions
  val = Math.PI;  - pritns pi
  val = Math.E; -prints e
  val = Math.round(2.4); - rounding the number
  val = Math.ceil(2.4); - rounding the number to top, here result would be 3.
  val = Math.floor(2.8); -rounding the nubmer to the bottom, here the result would be 2.
  val = Math.sqrt(64); - finds sqrt
  val = Math.abs(-3); - finding the absolute value. Here that would be 3.
  val = Math.pow(8,2); - finding the the 8 to the power of 2. 64.
  val = Math.min(2,33,4,1,55,3,6,-2); -finding the minimum value.
  val = Math.max(2,33,4,1,55,3,6,-2); -findign the maximum value.
  val = Math.random(); -generate a random number.

  val = Math.floor(Math.random() * 20 + 1); -converts random number which has decimal points to single number which comes under 20.

  #Video 13

  val = Array.isArray(numbers); = This will return an true value if the val is an array. So this can be used to make sure that the variable is array or not.
  - numbers.unshift(120); This can be used to add an element to the front of an array. Here the array name is numbers.

 -numbers.unshift(12);
 Take off from end
numbers.pop();
 Take of from front
numbers.shift();

- numbers.splice(2,3);  This means, at position 2, remove 3 items
- while using sort (numbers.sort()), the chance for it to make wrong sorting are there like orders changes in github if we add 10 as a number order. To avoid this us the below code.

val = numbers.sort(function(x,y){
    return x-y;
}) 
   
#video 15

- new Date(); By taking the value of this function, defaulty it returns today's date.


#Video 16
- When we check the values, using conditions, use the === to make sure the types are same.
- While checking whether there is value is there or not in a variable, try to use the typeof property to check wether it is undefined or not. Otherwise that may throw error.

#video 16

- Ternary operation
console.log( id === 100 ? 'CORRECT' : 'INCORRECT');
This makes very simple to check some conditions and print the results. Thirst value prints if the condition is true and the second value prints if the condition is flase.
- In js, intendation programming is also available like python.

#video 17
- Using switches, else if complications and lines can be reduced.
If a condition satisfies, break is introduced and that checking place is getting stopped by that condition.

#video 18

 IMMIDIEATLEY INVOKABLE FUCNTION EXPRESSIONS =IIFEs
 Function immedieately executes and produces the output.
 (function (name){
    console.log('Hello ' + name);
})('Brad');

- Different functions can be included inside of an object. And we can call the like we take values from object.
const todo = {
    add: function(){
        console.log('Add todo...');
    },
    eidt: function(id){
        console.log(`Edit to do ${id}`);
    }
}


todo.add();


#video 19

- foreEach(): The forEach() method calls a function once for each element in an array, in order.
- New concept For in loop
const user = {
    firstName: 'John',
    lastName: 'Doe',
    age: 40
}

for (let x in user) {
    console.log(`${x} : ${user[x]}`);

}

The objects key value pair can be obtained by for in loop method easily.

#Video 21

- If we use var, and at some points the global value of the var get changed. It can make big problems.
- In for loop also this global variable's value gets changed if we use var. So that is one of the important reason to avoid var and use let and const whil doing js programmings.

